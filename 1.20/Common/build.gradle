apply from: 'https://raw.githubusercontent.com/Fuzss/modresources/main/gradle/common.gradle'

dependencies {
    // Puzzles Lib
    modApi libs.puzzleslib.common
}

loom {
    accessWidenerPath = project(":Fabric").file("src/main/resources/${modId}.accesswidener")
}

processResources {
    from(project(":Fabric").sourceSets.main.resources) {
        include("fabric.mod.json")
        include("${modId}.accesswidener")
    }

    // this will ensure that this task is redone when a value changes
    inputs.property "modId", modId
    inputs.property "modName", modName
    inputs.property "modVersion", modVersion
    inputs.property "modDescription", modDescription
    inputs.property "modGroup", project.group
    inputs.property "modPageUrl", modSourceUrl
    inputs.property "modIssueUrl", modIssueUrl
    inputs.property "modAuthor", modAuthor
    inputs.property "modLicense", modLicense
    inputs.property "minFabricVersion", libs.versions.fabricloader.min.get()
    inputs.property "minFabricApiVersion", libs.versions.fabricapi.min.get()
    inputs.property "minecraftVersion", libs.versions.minecraft.get()
    inputs.property "minPuzzlesVersion", libs.versions.puzzleslib.min.get()
    inputs.property "mainEntryPoint", "${project.group}.${archivesBaseName}Fabric"
    inputs.property "clientEntryPoint", "${project.group}.client.${archivesBaseName}FabricClient"
    inputs.property "modFabricEnvironment", modFabricEnvironment

    // replace stuff in fabric.mod.json
    filesMatching('fabric.mod.json') {
        expand(
                'modId': modId,
                'modName': modName,
                'modVersion': modVersion,
                'modDescription': modDescription,
                'modGroup': project.group,
                'modPageUrl': modSourceUrl,
                'modIssueUrl': modIssueUrl,
                'modAuthor': modAuthor,
                'modLicense': modLicense,
                'minFabricVersion': libs.versions.fabricloader.min.get(),
                'minFabricApiVersion': libs.versions.fabricapi.min.get(),
                'minecraftVersion': libs.versions.minecraft.get(),
                "minPuzzlesVersion": libs.versions.puzzleslib.min.get(),
                "mainEntryPoint": "${project.group}.${archivesBaseName}Fabric",
                "clientEntryPoint": "${project.group}.client.${archivesBaseName}FabricClient",
                "modFabricEnvironment": modFabricEnvironment
        )
    }
}
